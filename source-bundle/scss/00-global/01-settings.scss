/***************************************************
 * OUR PAGE SETTINGS
 */


/* We can use a wrapperclass to make unique rules and
 * avoid conflicts with existing older css classes.
 *
 *   <div class="our-namespace-to-isolate-the-rules">
 *       <div class="teaser">
 *           [...]
 *       </div>
 *   </div>
 */
//We can set a global namespace...
$namespace:                       null; //".mynamespace "; // to use as a wrapper we need a whitespace at the end!

// ...or we enable/disable each set of rules
//$footer-namespace:              null;
//$header-namespace:              null;
// [...]

// Base Colors
$white:                         #FFFFFF;
$black:                         #000000;
$red:                           #E71835;
$blue:                          #086D9A;
$bluelight:                     #4ac6ff;
$grey:                          #f2f2f2; // page wrapper background
$greyDark:                      #e3e3e3; //
$greyLight:                     #808080;
$greyDisabled:                  $greyLight;
$greyBgMarginal:                $greyDark; // Marginal Background Color
// Special Colors
$lightestTextGrey:              $greyLight; // quote
$greyBorder:                    #CCCCCC;
$greyInputBorder:               $greyBorder;
$greySource:                    $lightestTextGrey;
$greySourceDesk:                darken($white, 12%);
$greyAuthor:                    $lightestTextGrey;
$blueAuthor:                    $bluelight;
$greyAnzeige:                   $lightestTextGrey;
$page-background-color:         $grey;
$labelColorLight:               $lightestTextGrey;
// form validation colors:
$formElementBorderColor:        $greyInputBorder;
$formgoupBottomMarginPx:        14px;
// TextColors in validated forms and messageboxes
$textSuccessColor:              #008000; // checklist icon
$textWarningColor:              #f0ad4e;
$textInfoColor:                 #FFBF00;
$textErrorColor:                $red;
// message box colors:
$messageBaseBg:                 #fcf8e3;
$messageSuccessBg:              #dff0d8;
$messageErrorBg:                #f2dede;

// Dimensions
$smallGapPx:                    12px;
$mediumGapPx:                   16px;
$largeGapPx:                    20px;
$pageWidthDeskPx:               1420px;  // max width for hero units and header
$contentWidthDeskPx:            940px; // max width for inner content units
$contentWidthDeskArticlePx:     700px;
$gridGutter:                    1.250rem; // 20px_16px;
$blockPaddingPx:                $largeGapPx; // Grey Teaser...
$pagePaddingPx:                 40px;
$pagePaddingBigScreenPx:        120px; // huge padding for big but not the biggest screens, used in cases where small columns are not beeing displayed, but content should not be that wide...
$pagePaddingPalmPx:             20px;
$teaserInnerPadding:            $largeGapPx;
$blockBottomMarginPx:           30px; // Teaser...
$teaserBorderedPaddingPx:       $mediumGapPx;
$teaserBorderedMarginTopPx:     $largeGapPx;
$articleImageMaxHeightPx:       468px;
$formInputHeightPx:             40px;
$formInputHeightPalmPx:         50px;
$btn-heightPx:                  $formInputHeightPx;
$btn-heightPalmPx:              $formInputHeightPalmPx;
$formItemPaddingPx:             6px;
$boxPaddingPx:                  $smallGapPx;
$marginalBoxPaddingPx:          $smallGapPx;
$easyPopupPaddingPx:            $smallGapPx;
$formPaddingPx:                 $smallGapPx;
$formfieldMaxWidth:             none;
$blockImageMarginBottomPx:      $smallGapPx;
$channelNavigationElementPadingPx:   10px; // h=42px
$accordionTitleElementPaddingPx: $channelNavigationElementPadingPx;
$heroSwiperHeightPx:            215px; //235px;
$imageframePaddingRem:          1.25rem;
$tablecellPaddingEm:            0.5em; // Table
$borderRadius:                  4px; // border radius for buttons etc.

// Font
$base-font-family:              'droid-sans', Arial, sans-serif;
$serif-font-family:             'droid-serif', serif;
$baseTextColor:                 $black;
$fontInactiveColor:             #999999;
$linkColor:                     $blue;
$inlineBottomGutter:            0.7em; // Margin bottom for paragraphs, lists, ...
$base-font-size:                18px;
$medium-font-size:              14px;
$smallest-font-size:            12px;
$bigFontSizePx:                 20px; // some big text blocks
$base-line-height:              30px;
$font-size-h1:                  60px;
$line-height-h1:                75px;
$font-size-h2:                  40px;
$line-height-h2:                1.5em;
$font-size-h3:                  1.2em;
$line-height-h3:                1.4;
$font-size-h4:                  1em; // 14px;
$line-height-h4:                1.2em; // 21px
$font-color-h1:                 $baseTextColor;
$font-color-h2:                 $baseTextColor;
$font-color-h3:                 $baseTextColor;
$font-color-h4:                 $baseTextColor;
$font-family-h1:                'droid-sans', Arial, sans-serif;//'droid-serif', serif;
$font-family-h2:                'droid-sans', Arial, sans-serif;//'droid-serif', serif;
$font-family-h3:                'droid-sans', Arial, sans-serif;//'droid-serif', serif;
$font-family-h4:                $base-font-family;
$font-weight-h1:                700;
$font-weight-h2:                700;
$font-weight-h3:                700;
$font-weight-h4:                700;
$font-weight-a:                 400;

// Breakpoint naming definitions - theese can be used in the mixin
$breakpoint_smallest:           'smallest';
$breakpoint_smallest_and_up:    'smallest-and-up';
$breakpoint_phone:              'phone';
$breakpoint_medium_max:         'medium-max';
$breakpoint_medium:             'medium';
$breakpoint_big:                'big';
$breakpoint_large:              'large';

// Breakpoint definitions
$breakpoint_width_smallest:      (420px / 16px) * 1rem;
$breakpoint_width_phone:         (720px / 16px) * 1rem;
$breakpoint_width_medium:        (1000px / 16px) * 1rem;
$breakpoint_width_big:           (1200px / 16px) * 1rem;
$breakpoint_width_large:         ($pageWidthDeskPx / 16px) * 1rem;
$pageWidthDesk:                  $breakpoint_width_large;

// Breakpoints for media-query-mixin
$breakpoints: (
    // exactly smallest screens
    $breakpoint_smallest '(max-width: '+$breakpoint_width_smallest+')',
    // everything bigger than small screen sizes
    $breakpoint_smallest_and_up '(min-width: '+($breakpoint_width_smallest + 0.001rem)+')',
    // everything with max phone width
    $breakpoint_phone '(max-width: '+$breakpoint_width_phone+')',
    // every up to medium breakpoint size
    $breakpoint_medium_max '(max-width: '+$breakpoint_width_medium+')',
    // every bigger than phone width
    $breakpoint_medium '(min-width: '+($breakpoint_width_phone + 0.001rem)+')',
    // every screen with at least the size of big breakpoint
    $breakpoint_big '(min-width: '+$breakpoint_width_big+')',
    // every screen with at least the size of the large breakpoint
    $breakpoint_large '(min-width: '+$breakpoint_width_large+')',
    // print media query
    'print' 'print'
);

// Do we need some normalize rules (normalize.scss)?
$use_simple_normalize:          true;
$use_advanced_normalize:        false;


// Pikaday Datepicker
$pd-font-family:                $base-font-family;
$pd-text-color:                 $baseTextColor;
$pd-title-bg:                   $white;
$pd-picker-border:              $greyBorder;
$pd-picker-border-bottom:       $greyBorder;
$pd-th-color:                   $lightestTextGrey;
$pd-day-color:                  $baseTextColor;
$pd-day-bg:                     $grey;
$pd-day-hover-bg:               $blue;
$pd-day-today-color:            $blue;
$pd-day-selected-bg:            $blue;
$pd-week-color:                 $lightestTextGrey;
$pd-day-selected-shadow:        transparent;
